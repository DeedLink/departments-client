name: Vite Frontend CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build \
            --build-arg VITE_USER_API_URL=${{ secrets.VITE_USER_API_URL }} \
            --build-arg VITE_DEED_API_URL=${{ secrets.VITE_DEED_API_URL }} \
            --build-arg VITE_PINATA_API_URL=${{ secrets.VITE_PINATA_API_URL }} \
            --build-arg VITE_SURVEY_PLAN_API_URL=${{ secrets.VITE_SURVEY_PLAN_API_URL }} \
            --build-arg VITE_PROPERTY_NFT_ADDRESS=${{ secrets.VITE_PROPERTY_NFT_ADDRESS }} \
            --build-arg VITE_FACTORY_ADDRESS=${{ secrets.VITE_FACTORY_ADDRESS }} \
            --build-arg VITE_FRACTIONAL_ADDESS=${{ secrets.VITE_FRACTIONAL_ADDESS }} \
            --build-arg VITE_ESCROW_FACTORY_ADDRESS=${{ secrets.VITE_ESCROW_FACTORY_ADDRESS }} \
            --build-arg VITE_DEPLOYER_ADDRESS=${{ secrets.VITE_DEPLOYER_ADDRESS }} \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/department-client-web:latest .
      
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/department-client-web:latest

      - name: Deploy via SSH to EC2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            DEPLOY_DIR="/home/ubuntu/deedlink-deployments/department-client-web"
            mkdir -p $DEPLOY_DIR
            cd $DEPLOY_DIR

            if [ ! -d ".git" ]; then
              git clone https://github.com/DeedLink/departments-client.git .
            else
              git fetch origin
              git reset --hard origin/main
            fi

            docker compose pull frontend
            docker compose down
            docker compose up -d --remove-orphans
